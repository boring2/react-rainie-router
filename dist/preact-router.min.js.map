{"version":3,"sources":["../src/util.js","../src/Route.jsx","../src/index.js"],"names":["exec","url","route","opts","arguments","length","undefined","EMPTY","reg","c","match","matches","ret","p","split","i","r","decodeURIComponent","slice","join","segmentize","replace","max","Math","charAt","param","flags","plus","indexOf","star","val","map","default","pathRankSort","a","b","aAttr","props","bAttr","diff","rank","path","strip","isPromise","obj","then","setUrl","type","customHistory","history","getCurrentUrl","getCurrentLocation","location","pathname","search","listenBefore","func","push","Promise","all","LISTENRS","routeTo","catch","e","console","log","didRoute","forEach","router","routeFromLink","node","getAttribute","href","target","handleLinkClick","button","currentTarget","this","prevent","stopImmediatePropagation","stopPropagation","preventDefault","Route","state","componentWillMount","component","_props2","getComponent","promise","SplitComponent","setState","render","RoutedComponent","_props3","_props","objectWithoutProperties","React","createElement","Component","PropTypes","ROUTERS","addEventListener","Router","_React$Component","call","_this","shouldComponentUpdate","onChange","componentWillUnmount","splice","_didRoute","children","routeElement","active","Children","toArray","sort","filter","child","cloneElement","_extends","current","previous","previousUrl","Link","_ref","onClick"],"mappings":"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","file":"preact-router.min.js","sourcesContent":["const EMPTY = {};\n\nexport function exec(url, route, opts = EMPTY) {\n    let reg = /(?:\\?([^#]*))?(#.*)?$/,\n        c = url.match(reg),\n        matches = {},\n        ret;\n    if (c && c[1]) {\n        let p = c[1].split('&');\n        for (let i = 0; i < p.length; i++) {\n            let r = p[i].split('=');\n            matches[decodeURIComponent(r[0])] = decodeURIComponent(r.slice(1).join('='));\n        }\n    }\n    url = segmentize(url.replace(reg, ''));\n    route = segmentize(route || '');\n    let max = Math.max(url.length, route.length);\n    for (let i = 0; i < max; i++) {\n        if (route[i] && route[i].charAt(0) === ':') {\n            let param = route[i].replace(/(^\\:|[+*?]+$)/g, ''),\n                flags = (route[i].match(/[+*?]+$/) || EMPTY)[0] || '',\n                plus = ~flags.indexOf('+'),\n                star = ~flags.indexOf('*'),\n                val = url[i] || '';\n            if (!val && !star && (flags.indexOf('?') < 0 || plus)) {\n                ret = false;\n                break;\n            }\n            matches[param] = decodeURIComponent(val);\n            if (plus || star) {\n                matches[param] = url.slice(i).map(decodeURIComponent).join('/');\n                break;\n            }\n        } else if (route[i] !== url[i]) {\n            ret = false;\n            break;\n        }\n    }\n    if (opts.default !== true && ret === false) return false;\n    return matches;\n}\n\n\nexport function pathRankSort(a, b) {\n    let aAttr = a.props || EMPTY,\n        bAttr = b.props || EMPTY;\n    if (aAttr.default) return 1;\n    if (bAttr.default) return -1;\n    let diff = rank(aAttr.path) - rank(bAttr.path);\n    return diff || (aAttr.path.length - bAttr.path.length);\n}\n\nexport function segmentize(url) {\n    return strip(url).split('/');\n}\n\nexport function rank(url) {\n    return (strip(url).match(/\\/+/g) || '').length;\n}\n\nexport function strip(url) {\n    return url.replace(/(^\\/+|\\/+$)/g, '');\n}\n","import React from 'react';\n\nfunction isPromise(obj) {\n    return !!obj &&\n        (typeof obj === 'object' || typeof obj === 'function') &&\n        typeof obj.then === 'function';\n}\n\n\nclass Route extends React.Component {\n    static PropTypes = {\n        component: React.PropTypes.node,\n        getComponent: React.PropTypes.func,\n    }\n\n    state = {\n        SplitComponent: undefined,\n    }\n\n    componentWillMount() {\n        const { component, getComponent} = this.props;\n        if (!component && getComponent) {\n            const promise = getComponent();\n            if (isPromise(promise)) {\n                promise.then(SplitComponent => {\n                    this.setState({ SplitComponent });\n                });\n            }\n        }\n    }\n\n    render () {\n        const {\n            component: RoutedComponent,\n            getComponent,\n            ..._props,\n        } = this.props;\n\n        const { SplitComponent } = this.state;\n\n\n        if (RoutedComponent)\n            return <RoutedComponent {..._props} />;\n\n        return SplitComponent ?\n            <SplitComponent {..._props} /> : null;\n    }\n}\n\nexport default Route;\n","import React from 'react';\nimport {exec, pathRankSort} from './util';\nimport Route from './Route.jsx';\n\nlet customHistory = null;\n\nconst ROUTERS = [];\nconst EMPTY = {};\nconst LISTENRS = [];\n\nfunction setUrl(url, type = 'push') {\n    if (customHistory && customHistory[type]) {\n        customHistory[type](url);\n    } else if (typeof history !== 'undefined' && history[type + 'State']) {\n        history[type + 'State'](null, null, url);\n    }\n}\n\nfunction getCurrentUrl() {\n    let url;\n    if (customHistory && customHistory.getCurrentLocation) {\n        url = customHistory.getCurrentLocation();\n    } else {\n        url = typeof location !== 'undefined'\n            ? location\n            : EMPTY;\n    }\n    return `${url.pathname || ''}${url.search || ''}`;\n}\n\nfunction listenBefore(func) {\n    LISTENRS.push(func);\n}\n\n\nfunction route(url, replace = false) {\n    return Promise.all(LISTENRS.map(func => func(url)))\n    .then(() => {\n        if (typeof url !== 'string' && url.url) {\n            replace = url.replace;\n            url = url.url;\n        }\n        setUrl(url, replace\n            ? 'replace'\n            : 'push');\n        return routeTo(url);\n    }).catch(e => console.log(e));\n}\n\nfunction routeTo(url) {\n    let didRoute = false;\n    ROUTERS.forEach(router => {\n        if (router.routeTo(url) === true) {\n            didRoute = true;\n        }\n    });\n    return didRoute;\n}\n\nfunction routeFromLink(node) {\n    // only valid elements\n    if (!node || !node.getAttribute)\n        return;\n\n    let href = node.getAttribute('href'),\n        target = node.getAttribute('target');\n\n    // ignore links with targets and non-path URLs\n    if (!href || !href.match(/^\\//g) || (target && !target.match(/^_?self$/i)))\n        return;\n\n    // attempt to route, if no match simply cede control to browser\n    return route(href);\n}\n\nfunction handleLinkClick(e) {\n    if (e.button !== 0)\n        return;\n    routeFromLink(e.currentTarget || e.target || this);\n    return prevent(e);\n}\n\nfunction prevent(e) {\n    if (e) {\n        if (e.stopImmediatePropagation)\n            e.stopImmediatePropagation();\n        if (e.stopPropagation)\n            e.stopPropagation();\n        e.preventDefault();\n    }\n    return false;\n}\n\nif (typeof addEventListener === 'function') {\n    addEventListener('popstate', () => routeTo(getCurrentUrl()));\n}\n\nclass Router extends React.Component {\n    constructor(props) {\n        super(props);\n        if (props.history) {\n            customHistory = props.history;\n        }\n\n        this.state = {\n            url: this.props.url || getCurrentUrl()\n        };\n    }\n\n    shouldComponentUpdate(props, state) {\n        return props.url !== this.props.url ||\n            props.onChange !== this.props.onChange ||\n            state.url !== this.state.url;\n    }\n\n    componentWillMount() {\n        ROUTERS.push(this);\n    }\n\n    componentWillUnmount() {\n        ROUTERS.splice(ROUTERS.indexOf(this), 1);\n    }\n\n    routeTo(url) {\n        this._didRoute = false;\n        this.setState({url});\n        return this._didRoute;\n    }\n\n    render() {\n        const {children, onChange} = this.props;\n        const {url} = this.state;\n        let routeElement = null;\n        let active = React.Children.toArray(children)\n        .sort(pathRankSort)\n        .filter(child => {\n            let props = child.props,\n                path = props.path,\n                matches = exec(url, path, props);\n            if (matches) {\n                routeElement = React.cloneElement(\n                    child,\n                    {...props, url, matches}\n                );\n                return true;\n            }\n        });\n\n        let current = active[0] || null;\n        this._didRoute = !!current;\n\n        let previous = this.previousUrl;\n        if (url !== previous) {\n            this.previousUrl = url;\n            if (typeof onChange === 'function') {\n                onChange({router: this, url, previous, active, current});\n            }\n        }\n        return routeElement;\n    }\n}\n\nconst Link = ({\n    children,\n    ...props\n}) => (\n    <a {...props} onClick={handleLinkClick}>{children}</a>\n);\n\nRouter.listenBefore = listenBefore;\nRouter.route = route;\nRouter.Router = Router;\nRouter.Route = Route;\nRouter.Link = Link;\n\nexport {route, Router, Route, Link, listenBefore};\nexport default Router;\n"]}